{
	"info": {
		"_postman_id": "zneha-backend-api-collection",
		"name": "Zneha Backend API",
		"description": "Complete API documentation for Zneha Backend - Product Management System",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "zneha-backend"
	},
	"item": [
		{
			"name": "Products",
			"item": [
				{
					"name": "Create Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has product data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('name');",
									"    pm.expect(jsonData).to.have.property('status');",
									"});",
									"",
									"pm.test(\"Product has correct structure\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql('active');",
									"    pm.expect(jsonData.name).to.be.a('string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"iPhone 15 Pro Max\",\n    \"description\": \"The most advanced iPhone with A17 Pro chip, ProRAW photography, and titanium design. Features advanced camera system with 5x optical zoom.\",\n    \"shortDescription\": \"Latest iPhone Pro Max with titanium design\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/products/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								""
							]
						},
						"description": "Creates a new product in the system. All fields except `id`, `createdAt`, and `updatedAt` should be provided."
					},
					"response": [
						{
							"name": "Successful Creation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"iPhone 15 Pro Max\",\n    \"description\": \"The most advanced iPhone with A17 Pro chip\",\n    \"shortDescription\": \"Latest iPhone Pro Max\",\n    \"status\": \"active\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/v1/products/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"products",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"iPhone 15 Pro Max\",\n    \"description\": \"The most advanced iPhone with A17 Pro chip\",\n    \"shortDescription\": \"Latest iPhone Pro Max\",\n    \"status\": \"active\",\n    \"createdAt\": \"2025-08-17T05:45:30.123456Z\",\n    \"updatedAt\": \"2025-08-17T05:45:30.123456Z\"\n}"
						}
					]
				},
				{
					"name": "Get All Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Products have required fields\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.length > 0) {",
									"        pm.expect(jsonData[0]).to.have.property('id');",
									"        pm.expect(jsonData[0]).to.have.property('name');",
									"        pm.expect(jsonData[0]).to.have.property('status');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/products/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								""
							]
						},
						"description": "Retrieves all products from the database. Returns an array of product objects."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/v1/products/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"products",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"iPhone 15\",\n        \"description\": \"Latest Apple iPhone\",\n        \"shortDescription\": \"Apple flagship\",\n        \"status\": \"active\",\n        \"createdAt\": \"2025-08-17T05:39:06.351Z\",\n        \"updatedAt\": \"2025-08-17T05:39:06.351Z\"\n    },\n    {\n        \"id\": 2,\n        \"name\": \"Samsung Galaxy S24\",\n        \"description\": \"Flagship Android phone\",\n        \"shortDescription\": \"Samsung flagship\",\n        \"status\": \"active\",\n        \"createdAt\": \"2025-08-17T05:39:06.352Z\",\n        \"updatedAt\": \"2025-08-17T05:39:06.352Z\"\n    }\n]"
						}
					]
				},
				{
					"name": "Get Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has product data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('name');",
									"    pm.expect(jsonData).to.have.property('status');",
									"});",
									"",
									"pm.test(\"Product ID matches request\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.be.a('number');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/products/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"1"
							]
						},
						"description": "Retrieves a specific product by its ID. Returns 404 if product not found."
					},
					"response": [
						{
							"name": "Product Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/v1/products/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"products",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"iPhone 15\",\n    \"description\": \"Latest Apple iPhone\",\n    \"shortDescription\": \"Apple flagship\",\n    \"status\": \"active\",\n    \"createdAt\": \"2025-08-17T05:39:06.351Z\",\n    \"updatedAt\": \"2025-08-17T05:39:06.351Z\"\n}"
						},
						{
							"name": "Product Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/v1/products/999",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"products",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Product not found\"\n}"
						}
					]
				},
				{
					"name": "Update Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has updated product data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('name');",
									"    pm.expect(jsonData).to.have.property('updatedAt');",
									"});",
									"",
									"pm.test(\"Product data is updated\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.be.a('string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"iPhone 15 Pro Max - Updated\",\n    \"description\": \"Updated description: The most advanced iPhone with A17 Pro chip, ProRAW photography, and titanium design. Now with enhanced AI capabilities.\",\n    \"shortDescription\": \"Updated iPhone Pro Max with AI features\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/products/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"1"
							]
						},
						"description": "Updates an existing product. The ID in the URL will be used, and all other fields will be updated with the provided values."
					},
					"response": [
						{
							"name": "Successful Update",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"iPhone 15 Pro Max - Updated\",\n    \"description\": \"Updated description\",\n    \"shortDescription\": \"Updated iPhone Pro Max\",\n    \"status\": \"active\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/v1/products/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"products",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"iPhone 15 Pro Max - Updated\",\n    \"description\": \"Updated description\",\n    \"shortDescription\": \"Updated iPhone Pro Max\",\n    \"status\": \"active\",\n    \"createdAt\": \"2025-08-17T05:39:06.351Z\",\n    \"updatedAt\": \"2025-08-17T05:45:30.789Z\"\n}"
						}
					]
				},
				{
					"name": "Delete Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.test(\"Response body is empty\", function () {",
									"    pm.expect(pm.response.text()).to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/products/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"1"
							]
						},
						"description": "Deletes a product by its ID. Returns 204 No Content on successful deletion."
					},
					"response": [
						{
							"name": "Successful Deletion",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/v1/products/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"products",
										"1"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": null,
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				}
			],
			"description": "Product management endpoints for CRUD operations",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"// Set common headers or authentication if needed",
							"// pm.request.headers.add({key: 'Authorization', value: 'Bearer ' + pm.environment.get('token')});"
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global pre-request script",
					"console.log('Making request to: ' + pm.request.url);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test script",
					"pm.test(\"Response time is less than 2000ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(2000);",
					"});",
					"",
					"pm.test(\"Response has correct Content-Type\", function () {",
					"    if (pm.response.code !== 204) {",
					"        pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
					"    }",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "api_version",
			"value": "v1",
			"type": "string"
		}
	]
}
